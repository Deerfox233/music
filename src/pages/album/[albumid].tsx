import { PlayerContext, PlayerContextProps } from "@/components/player/Player";
import { GetServerSideProps } from "next";
import { useContext } from "react";
import { Album } from "../api/album";
import styles from "./albumPage.module.css"
import Head from "next/head";
import { Playlist } from "../api/playlist";
import { Cover } from "@/components/main/Recommendation";
import Link from "next/link";
import { ArtistList } from "@/components/player/SongInfo";
import { TrackList } from "../playlist/[playlistid]";
import { Song } from "../api/song";

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
    const ID = params?.albumid as string;

    const album = await Album.fetchInfoAsync(ID);

    return {
        props: {
            serializedAlbum: JSON.stringify(album)
        }
    };
}

type AlbumPageProps = {
    serializedAlbum: string
}

// 专辑页面
export default function AlbumPage(props: AlbumPageProps) {
    // Song原型丢了
    const album: Album = JSON.parse(props.serializedAlbum);
    const player = useContext(PlayerContext);
    // Song原型补回来了
    const playlist = new Playlist(undefined, undefined, undefined, album.tracks?.map(track => {
        return new Song(
            track.ID,
            {
                name: track.name,
                coverUrl: track.coverUrl,
                artists: track.artists,
                duration: track.duration,
                album: track.album,
            }
        );
    }));

    return (
        <div className={styles.albumPage}>
            <Head>
                <title>{album.name}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <AlbumInfo album={album} player={player} />
            <TrackList player={player} playlist={playlist} />
        </div>
    );
}

type AlbumInfoProps = {
    album: Album,
    player: PlayerContextProps
}

function AlbumInfo(props: AlbumInfoProps) {
    const album = props.album;
    const player = props.player;

    return (
        <div className={styles.albumInfo}>
            <Cover
                ID={album.ID}
                name={album.name!}
                coverUrl={album.coverImgUrl!}
                size={270}
                radius={10}
                type="album"
                glow={true}
                offset={12}
                intensity={1}
            />
            <Info album={album} player={player} />
        </div>
    );
}

function Info(props: AlbumInfoProps) {
    const album = props.album;
    const date = new Date(props.album.date!);
    const artists = props.album.artists;

    return (
        <div className={styles.info}>
            <div className={styles.title}>
                {album.name}
            </div>
            <div className={styles.avatarAndName}>
                <div
                    style={{
                        color: "#656565",
                        fontSize: "small",
                        display: "flex",
                        alignItems: "center",
                        paddingRight: "5px"
                    }}>
                    By
                </div>
                <div style={{
                    display: "flex",
                    alignItems: "center"
                }}>
                    <ArtistList
                        artists={artists}
                        fontSize="small"
                        color="#fa586a"
                    />
                </div>
                <div className={styles.date}>
                    {date.getFullYear() + " 年 " + (date.getMonth() + 1) + " 月 " + date.getDate() + " 日发行"}
                </div>
            </div>
            <div className={styles.description}>
                {album.description}
            </div>
        </div >
    );
}